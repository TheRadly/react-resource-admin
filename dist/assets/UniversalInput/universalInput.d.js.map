{"version":3,"file":"universalInput.d.js","names":[],"sources":["../../../src/assets/UniversalInput/universalInput.d.ts"],"sourcesContent":["/// <reference types=\"react\" />\nimport { SelectType } from \"../../types/InputEventTypes\";\nimport { CrudType } from \"../../resources/ResourceInputsForm/models/CrudType\";\ninterface UniversalInputProps {\n    value: any;\n    onChange: (arg: any) => void;\n    disabled?: boolean;\n    dropdownValues?: any;\n    currentOption?: SelectType;\n    isMultiInput?: boolean;\n    isJson?: boolean;\n    withChildQuery?: boolean;\n    isShowQueryContainer?: boolean;\n    handleShowQueryContainer?: (arg?: any) => void;\n    isArray?: boolean;\n    isDisabled?: boolean;\n    isDate?: boolean;\n    isTextArea?: boolean;\n    fieldsToExcludeInQueryInput?: string[];\n    extraFormCruds?: CrudType;\n    isFloat?: boolean;\n    fullWidth?: boolean;\n    label?: string;\n    placeholder?: string;\n    emptyLabel?: string;\n    closeTooltipLabel?: string;\n    addTooltipLabel?: string;\n    deleteTooltipLabel?: string;\n    editTooltipLabel?: string;\n}\ndeclare const _default: import(\"react\").MemoExoticComponent<({ label: propLabel, placeholder, value, onChange, disabled, currentOption, isMultiInput, withChildQuery, handleShowQueryContainer, fieldsToExcludeInQueryInput, extraFormCruds, fullWidth, emptyLabel, isArray, isDisabled, isFloat, isJson, isShowQueryContainer, isDate, isTextArea, closeTooltipLabel, addTooltipLabel, deleteTooltipLabel, editTooltipLabel, }: UniversalInputProps) => import(\"react/jsx-runtime\").JSX.Element>;\nexport default _default;\n"],"mappings":""}