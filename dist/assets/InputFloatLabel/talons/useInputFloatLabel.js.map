{"version":3,"file":"useInputFloatLabel.js","names":["_react","require","useInputFloatLabel","_ref","onChange","isFloat","handleChangeInputText","useCallback","e","test","target","value","_default","exports","default"],"sources":["../../../../src/assets/InputFloatLabel/talons/useInputFloatLabel.ts"],"sourcesContent":["import { useCallback } from \"react\";\n\ninterface UseInputFloatLabel {\n  isFloat?: boolean;\n  onChange: (arg: any) => void;\n}\n\nconst useInputFloatLabel = ({ onChange, isFloat }: UseInputFloatLabel) => {\n  const handleChangeInputText = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      if (isFloat && /^[0-9]*(\\.|,)?[0-9]*$/g.test(e.target.value)) {\n        onChange(e.target.value);\n      } else if (!isFloat) {\n        onChange(e.target.value);\n      }\n    },\n    [isFloat, onChange]\n  );\n\n  return { handleChangeInputText };\n};\n\nexport default useInputFloatLabel;\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAOA,MAAMC,kBAAkB,GAAGC,IAAA,IAA+C;EAAA,IAA9C;IAAEC,QAAQ;IAAEC;EAA4B,CAAC,GAAAF,IAAA;EACnE,MAAMG,qBAAqB,GAAG,IAAAC,kBAAW,EACtCC,CAAsC,IAAK;IAC1C,IAAIH,OAAO,IAAI,wBAAwB,CAACI,IAAI,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,EAAE;MAC5DP,QAAQ,CAACI,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;IAC1B,CAAC,MAAM,IAAI,CAACN,OAAO,EAAE;MACnBD,QAAQ,CAACI,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;IAC1B;EACF,CAAC,EACD,CAACN,OAAO,EAAED,QAAQ,CACpB,CAAC;EAED,OAAO;IAAEE;EAAsB,CAAC;AAClC,CAAC;AAAC,IAAAM,QAAA,GAEaV,kBAAkB;AAAAW,OAAA,CAAAC,OAAA,GAAAF,QAAA"}